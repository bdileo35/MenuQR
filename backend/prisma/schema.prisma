// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

enum Role {
  USER
  ADMIN
  OWNER
}

model User {
  id             String   @id @default(cuid())
  name           String
  email          String   @unique
  password       String
  restaurantId   String   @unique
  restaurantName String
  role           Role     @default(ADMIN)
  avatar         String?
  isActive       Boolean  @default(true)
  lastLogin      DateTime?
  
  // WhatsApp configuration
  whatsappPhone       String?
  whatsappToken       String?
  whatsappPhoneId     String?
  whatsappEnabled     Boolean @default(false)
  
  // Relations
  menus          Menu[]
  
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("users")
}

model Menu {
  id             String   @id @default(cuid())
  restaurantId   String   @unique
  restaurantName String
  description    String?
  
  // Logo
  logoUrl        String?
  logoPublicId   String?
  
  // Theme configuration
  primaryColor     String @default("#2563eb")
  secondaryColor   String @default("#64748b")
  backgroundColor  String @default("#ffffff")
  textColor        String @default("#1f2937")
  fontFamily       String @default("Inter")
  
  // Contact information
  contactPhone     String?
  contactEmail     String?
  contactAddress   String?
  contactWebsite   String?
  socialInstagram  String?
  socialFacebook   String?
  socialTwitter    String?
  
  // Settings
  showPrices       Boolean @default(true)
  showImages       Boolean @default(true)
  showDescriptions Boolean @default(true)
  showNutritional  Boolean @default(false)
  allowOrdering    Boolean @default(false)
  currency         String  @default("$")
  language         String  @default("es")
  
  isActive       Boolean  @default(true)
  
  // Relations
  owner          User       @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId        String
  categories     Category[]
  items          MenuItem[]
  
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("menus")
}

model Category {
  id          String   @id @default(cuid())
  name        String
  description String?
  position    Int      @default(0)
  isActive    Boolean  @default(true)
  
  // Image
  imageUrl    String?
  imagePublicId String?
  
  // Relations
  menu        Menu     @relation(fields: [menuId], references: [id], onDelete: Cascade)
  menuId      String
  items       MenuItem[]
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("categories")
}

model MenuItem {
  id              String   @id @default(cuid())
  name            String
  description     String?
  price           Float
  originalPrice   Float?
  position        Int      @default(0)
  
  // Image
  imageUrl        String?
  imagePublicId   String?
  
  // Status and features
  isAvailable     Boolean  @default(true)
  isPopular       Boolean  @default(false)
  isVegetarian    Boolean  @default(false)
  isVegan         Boolean  @default(false)
  isGlutenFree    Boolean  @default(false)
  spicyLevel      Int      @default(0) // 0-3 scale
  
  // Nutritional information
  calories        Int?
  protein         Float?
  carbs           Float?
  fat             Float?
  
  // Additional info
  preparationTime Int?     // in minutes
  allergens       String?  // Comma-separated allergens
  tags            String?  // Comma-separated tags
  
  // Relations
  menu            Menu     @relation(fields: [menuId], references: [id], onDelete: Cascade)
  menuId          String
  category        Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId      String
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("menu_items")
}
